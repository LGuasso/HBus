/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-05-27 16:00:31 UTC)
 * on 2016-06-03 at 00:41:24 UTC 
 * Modify at your own risk.
 */

package br.com.expressobits.hbus.backend.itineraryApi;

/**
 * Service definition for ItineraryApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ItineraryApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ItineraryApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.22.0 of the itineraryApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://hbus-1206.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "itineraryApi/v1/itinerary/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ItineraryApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ItineraryApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getItineraries".
   *
   * This request holds the parameters needed by the itineraryApi server.  After setting any optional
   * parameters, call the {@link GetItineraries#execute()} method to invoke the remote operation.
   *
   * @param country
   * @param cityName
   * @return the request
   */
  public GetItineraries getItineraries(java.lang.String country, java.lang.String cityName) throws java.io.IOException {
    GetItineraries result = new GetItineraries(country, cityName);
    initialize(result);
    return result;
  }

  public class GetItineraries extends ItineraryApiRequest<br.com.expressobits.hbus.backend.itineraryApi.model.ItineraryCollection> {

    private static final String REST_PATH = "{country}/{cityName}";

    /**
     * Create a request for the method "getItineraries".
     *
     * This request holds the parameters needed by the the itineraryApi server.  After setting any
     * optional parameters, call the {@link GetItineraries#execute()} method to invoke the remote
     * operation. <p> {@link GetItineraries#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param country
     * @param cityName
     * @since 1.13
     */
    protected GetItineraries(java.lang.String country, java.lang.String cityName) {
      super(ItineraryApi.this, "GET", REST_PATH, null, br.com.expressobits.hbus.backend.itineraryApi.model.ItineraryCollection.class);
      this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
      this.cityName = com.google.api.client.util.Preconditions.checkNotNull(cityName, "Required parameter cityName must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetItineraries setAlt(java.lang.String alt) {
      return (GetItineraries) super.setAlt(alt);
    }

    @Override
    public GetItineraries setFields(java.lang.String fields) {
      return (GetItineraries) super.setFields(fields);
    }

    @Override
    public GetItineraries setKey(java.lang.String key) {
      return (GetItineraries) super.setKey(key);
    }

    @Override
    public GetItineraries setOauthToken(java.lang.String oauthToken) {
      return (GetItineraries) super.setOauthToken(oauthToken);
    }

    @Override
    public GetItineraries setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetItineraries) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetItineraries setQuotaUser(java.lang.String quotaUser) {
      return (GetItineraries) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetItineraries setUserIp(java.lang.String userIp) {
      return (GetItineraries) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String country;

    /**

     */
    public java.lang.String getCountry() {
      return country;
    }

    public GetItineraries setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cityName;

    /**

     */
    public java.lang.String getCityName() {
      return cityName;
    }

    public GetItineraries setCityName(java.lang.String cityName) {
      this.cityName = cityName;
      return this;
    }

    @Override
    public GetItineraries set(String parameterName, Object value) {
      return (GetItineraries) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getItinerary".
   *
   * This request holds the parameters needed by the itineraryApi server.  After setting any optional
   * parameters, call the {@link GetItinerary#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetItinerary getItinerary(java.lang.Long id) throws java.io.IOException {
    GetItinerary result = new GetItinerary(id);
    initialize(result);
    return result;
  }

  public class GetItinerary extends ItineraryApiRequest<br.com.expressobits.hbus.backend.itineraryApi.model.Itinerary> {

    private static final String REST_PATH = "{id}";

    /**
     * Create a request for the method "getItinerary".
     *
     * This request holds the parameters needed by the the itineraryApi server.  After setting any
     * optional parameters, call the {@link GetItinerary#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetItinerary#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetItinerary(java.lang.Long id) {
      super(ItineraryApi.this, "GET", REST_PATH, null, br.com.expressobits.hbus.backend.itineraryApi.model.Itinerary.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetItinerary setAlt(java.lang.String alt) {
      return (GetItinerary) super.setAlt(alt);
    }

    @Override
    public GetItinerary setFields(java.lang.String fields) {
      return (GetItinerary) super.setFields(fields);
    }

    @Override
    public GetItinerary setKey(java.lang.String key) {
      return (GetItinerary) super.setKey(key);
    }

    @Override
    public GetItinerary setOauthToken(java.lang.String oauthToken) {
      return (GetItinerary) super.setOauthToken(oauthToken);
    }

    @Override
    public GetItinerary setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetItinerary) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetItinerary setQuotaUser(java.lang.String quotaUser) {
      return (GetItinerary) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetItinerary setUserIp(java.lang.String userIp) {
      return (GetItinerary) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetItinerary setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetItinerary set(String parameterName, Object value) {
      return (GetItinerary) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertItinerary".
   *
   * This request holds the parameters needed by the itineraryApi server.  After setting any optional
   * parameters, call the {@link InsertItinerary#execute()} method to invoke the remote operation.
   *
   * @param country
   * @param cityName
   * @param content the {@link br.com.expressobits.hbus.backend.itineraryApi.model.Itinerary}
   * @return the request
   */
  public InsertItinerary insertItinerary(java.lang.String country, java.lang.String cityName, br.com.expressobits.hbus.backend.itineraryApi.model.Itinerary content) throws java.io.IOException {
    InsertItinerary result = new InsertItinerary(country, cityName, content);
    initialize(result);
    return result;
  }

  public class InsertItinerary extends ItineraryApiRequest<br.com.expressobits.hbus.backend.itineraryApi.model.Itinerary> {

    private static final String REST_PATH = "{country}/{cityName}";

    /**
     * Create a request for the method "insertItinerary".
     *
     * This request holds the parameters needed by the the itineraryApi server.  After setting any
     * optional parameters, call the {@link InsertItinerary#execute()} method to invoke the remote
     * operation. <p> {@link InsertItinerary#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param country
     * @param cityName
     * @param content the {@link br.com.expressobits.hbus.backend.itineraryApi.model.Itinerary}
     * @since 1.13
     */
    protected InsertItinerary(java.lang.String country, java.lang.String cityName, br.com.expressobits.hbus.backend.itineraryApi.model.Itinerary content) {
      super(ItineraryApi.this, "POST", REST_PATH, content, br.com.expressobits.hbus.backend.itineraryApi.model.Itinerary.class);
      this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
      this.cityName = com.google.api.client.util.Preconditions.checkNotNull(cityName, "Required parameter cityName must be specified.");
    }

    @Override
    public InsertItinerary setAlt(java.lang.String alt) {
      return (InsertItinerary) super.setAlt(alt);
    }

    @Override
    public InsertItinerary setFields(java.lang.String fields) {
      return (InsertItinerary) super.setFields(fields);
    }

    @Override
    public InsertItinerary setKey(java.lang.String key) {
      return (InsertItinerary) super.setKey(key);
    }

    @Override
    public InsertItinerary setOauthToken(java.lang.String oauthToken) {
      return (InsertItinerary) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertItinerary setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertItinerary) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertItinerary setQuotaUser(java.lang.String quotaUser) {
      return (InsertItinerary) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertItinerary setUserIp(java.lang.String userIp) {
      return (InsertItinerary) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String country;

    /**

     */
    public java.lang.String getCountry() {
      return country;
    }

    public InsertItinerary setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cityName;

    /**

     */
    public java.lang.String getCityName() {
      return cityName;
    }

    public InsertItinerary setCityName(java.lang.String cityName) {
      this.cityName = cityName;
      return this;
    }

    @Override
    public InsertItinerary set(String parameterName, Object value) {
      return (InsertItinerary) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeItineraries".
   *
   * This request holds the parameters needed by the itineraryApi server.  After setting any optional
   * parameters, call the {@link RemoveItineraries#execute()} method to invoke the remote operation.
   *
   * @param country
   * @param cityName
   * @return the request
   */
  public RemoveItineraries removeItineraries(java.lang.String country, java.lang.String cityName) throws java.io.IOException {
    RemoveItineraries result = new RemoveItineraries(country, cityName);
    initialize(result);
    return result;
  }

  public class RemoveItineraries extends ItineraryApiRequest<Void> {

    private static final String REST_PATH = "{country}/{cityName}";

    /**
     * Create a request for the method "removeItineraries".
     *
     * This request holds the parameters needed by the the itineraryApi server.  After setting any
     * optional parameters, call the {@link RemoveItineraries#execute()} method to invoke the remote
     * operation. <p> {@link RemoveItineraries#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param country
     * @param cityName
     * @since 1.13
     */
    protected RemoveItineraries(java.lang.String country, java.lang.String cityName) {
      super(ItineraryApi.this, "DELETE", REST_PATH, null, Void.class);
      this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
      this.cityName = com.google.api.client.util.Preconditions.checkNotNull(cityName, "Required parameter cityName must be specified.");
    }

    @Override
    public RemoveItineraries setAlt(java.lang.String alt) {
      return (RemoveItineraries) super.setAlt(alt);
    }

    @Override
    public RemoveItineraries setFields(java.lang.String fields) {
      return (RemoveItineraries) super.setFields(fields);
    }

    @Override
    public RemoveItineraries setKey(java.lang.String key) {
      return (RemoveItineraries) super.setKey(key);
    }

    @Override
    public RemoveItineraries setOauthToken(java.lang.String oauthToken) {
      return (RemoveItineraries) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveItineraries setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveItineraries) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveItineraries setQuotaUser(java.lang.String quotaUser) {
      return (RemoveItineraries) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveItineraries setUserIp(java.lang.String userIp) {
      return (RemoveItineraries) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String country;

    /**

     */
    public java.lang.String getCountry() {
      return country;
    }

    public RemoveItineraries setCountry(java.lang.String country) {
      this.country = country;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cityName;

    /**

     */
    public java.lang.String getCityName() {
      return cityName;
    }

    public RemoveItineraries setCityName(java.lang.String cityName) {
      this.cityName = cityName;
      return this;
    }

    @Override
    public RemoveItineraries set(String parameterName, Object value) {
      return (RemoveItineraries) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link ItineraryApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ItineraryApi}. */
    @Override
    public ItineraryApi build() {
      return new ItineraryApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ItineraryApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setItineraryApiRequestInitializer(
        ItineraryApiRequestInitializer itineraryapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(itineraryapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
