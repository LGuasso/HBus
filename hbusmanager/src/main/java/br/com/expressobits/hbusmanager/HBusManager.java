package br.com.expressobits.hbusmanager;

import br.com.expressobits.hbus.files.ReadFile;
import br.com.expressobits.hbus.model.City;
import br.com.expressobits.hbus.push.SendData;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyVetoException;
import java.beans.VetoableChangeListener;
import java.util.*;
import java.util.List;

/**
 * Gerenciador do programa no firebase.
 *
 * @author Rafael Correa
 * @since 31/12/16
 */
public class HBusManager extends JFrame {
    private JButton buttonSend;
    private JTextField textField1;
    private JPanel panel1;
    private JComboBox comboBoxCountries;
    private JTextArea textArea1;
    private JComboBox comboBoxCities;
    ReadFile readFile = new ReadFile();

    List<String> countries = new ArrayList<>();
    List<City> cities = new ArrayList<>();

    public HBusManager() {
        this.setTitle("News Manager");
        this.setSize(800, 600);
        this.setContentPane(panel1);
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        loadCountries();
        comboBoxCountries.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
               loadCities();
            }
        });
        buttonSend.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                SendData sendData = new SendData();
                sendData.pushCity(cities.get(comboBoxCities.getSelectedIndex()));
                //todo fazer leitura antes e mostrar resultados na tela... setar checksbox com seleção de dados
                //todo ter botão para ler dados.
            }
        });
    }

    public void loadCountries() {
        countries.add("BR/RS");
        DefaultComboBoxModel defaultComboBoxModelCountries = new DefaultComboBoxModel(countries.toArray());
        comboBoxCountries.setModel(defaultComboBoxModelCountries);
    }

    public void loadCities() {
        cities = readFile.getCities(countries.get(comboBoxCountries.getSelectedIndex()));
        DefaultComboBoxModel defaultComboBoxModelCities = new DefaultComboBoxModel(cities.toArray());
        comboBoxCities.setModel(defaultComboBoxModelCities);
    }


    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        textField1 = new JTextField();
        panel1.add(textField1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(230, 26), null, 0, false));
        comboBoxCountries = new JComboBox();
        panel1.add(comboBoxCountries, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textArea1 = new JTextArea();
        panel1.add(textArea1, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(230, 50), null, 0, false));
        comboBoxCities = new JComboBox();
        panel1.add(comboBoxCities, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonSend = new JButton();
        buttonSend.setText("Send");
        panel1.add(buttonSend, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(230, 34), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
